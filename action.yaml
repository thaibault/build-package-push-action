name: Build package and push

inputs:
  debug:
    description: Sets "NODE_ENV" to "debug".
    required: false
    default: false
  npm-token:
    description: List of build-time variables.
    required: true

  type:
    description: Sets semantic version update type.
    default: patch
    type: choice
    options:
      - major
      - minor
      - patch

outputs:
  version:
    description: The version of the newly published package.
    value: ${{ steps.version.outputs.new }}

runs:
  using: composite

  steps:
    - uses: thaibault/install-npm-package-dependencies-action@main
      with:
        debug: ${{ inputs.debug }}

    - name: Get the version determining script.
      run: |
        mkdir --parents .git/build-package-and-push-action && \
        curl \
          --output '.git/build-package-and-push-action/determine-version.sh' \
          'https://raw.githubusercontent.com/thaibault/build-package-push-action/refs/heads/main/determine-version.sh'
      shell: bash

    - name: Update package.json mentioned version.
      id: version
      # NOTE: Declare variable beforehand to avoid shadowing the nested shell's
      # exit code.
      run: |
        echo "new=$(bash .git/build-package-and-push-action/determine-version.sh --format 'v${MAJOR}.${MINOR}.${PATCH}${CANDIDATE}' --update-manifest-file ${{inputs.type || 'patch'}})" \
        >> "$GITHUB_OUTPUT"
      shell: bash

    - name: Remove downloaded artefacts.
      run: rm --force --recursive .git/build-package-and-push-action
      shell: bash

    - name: Print determined new version.
      run: echo Newly determined version is \"${{ steps.version.outputs.new }}\".
      shell: bash

    - name: Allow root user to publish repository location.
      run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      shell: bash

    #- uses: EndBug/add-and-commit@v9
    #  with:
    #    tag: ${{ steps.version.outputs.new }}
    #    message: Publish new version "${{ steps.version.outputs.new }}".

    # Setup .npmrc file to publish to npm
    - uses: actions/setup-node@v4
      with:
        node-version: latest
        registry-url: 'https://registry.npmjs.org'
    - name: Publish newly created package.
      env:
        NODE_AUTH_TOKEN: ${{ inputs.npm-token }}
        NODE_ENV: ${{ contains(inputs.debug, 'true') && 'debug' || '' }}
      run: npm publish
      shell: bash

    #- uses: actions/setup-node@v4
    #  with:
    #    node-version: '20.x'
    #    registry-url: 'https://npm.pkg.github.com'
    #    # Defaults to the user or organization that owns the workflow file
    #    scope: '@octocat'
    #- run: npm publish
    #  env:
    #    NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
