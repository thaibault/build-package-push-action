name: Build package and push

inputs:
  debug:
    description: Sets "NODE_ENV" to "debug".
    required: false
    default: false
  type:
    description: Sets semantic version update type.
    default: patch
    type: choice
    options:
      - major
      - minor
      - patch

outputs:
  version:
    description: The version of the newly published package.
    value: ${{ steps.version.outputs.new }}

runs:
  using: composite

  steps:
    - uses: thaibault/install-npm-package-dependencies-action@main
      with:
        debug: ${{ inputs.debug }}

    - name: Get the version determining script.
      run: |
        mkdir --parents .git/build-package-and-push-action && \
        curl \
          --output '.git/build-package-and-push-action/determine-version.sh' \
          'https://raw.githubusercontent.com/thaibault/build-package-push-action/refs/heads/main/determine-version.sh'
      shell: bash

    - name: Update package.json mentioned version.
      id: version
      # NOTE: Declare variable beforehand to avoid shadowing the nested shell's
      # exit code.
      run: |
        echo "new=$(bash .git/build-package-and-push-action/determine-version.sh --format 'v${MAJOR}.${MINOR}.${PATCH}${CANDIDATE}' --update-manifest-file ${{inputs.type || 'patch'}})" \
        >> "$GITHUB_OUTPUT"
      shell: bash

    - name: print
      run: echo Newly determined version is \"${{ steps.version.outputs.new }}\".
      shell: bash

    #- uses: EndBug/add-and-commit@v9
    #  with:
    #    default_author: github_actions
    #    tag: ${{ steps.version.outputs.new }}

    #- name: Publish newly created package.
    #  env:
    #    NODE_ENV: ${{ contains(inputs.debug, 'true') && 'debug' || '' }}
    #  run: yarn publish
    #  shell: bash
